services:
  ipfs:
    image: ipfs/kubo:latest
    container_name: localnet-ipfs
    volumes:
      - ipfs_path:/data/ipfs
      - ipfs_fuse:/ipfs
      - ipns_fuse:/ipns
    environment:
      - IPFS_PATH=/data/ipfs
    ports:
      - 4001:4001/tcp
      - 4001:4001/udp
      - 127.0.0.1:5001:5001
      - 127.0.0.1:8080:8080
    networks:
      sonrnet:
        ipv4_address: 172.16.238.2

  sonr0:
    container_name: localnet-sonr-node0
    build:
      context: $SONR_CODE_DIR
      dockerfile: docker/Dockerfile.localnet
    environment:
      - IPFS_ADDRESS=localnet-ipfs:4001
      - IPFS_API_ADDRESS=localnet-ipfs:5001
    ports:
      - 1317:1317
      - 2345:2345
      - 26656-26657:26656-26657
      - 9090:9090
      - 9091:9091
      - 4500:4500
    networks:
      sonrnet:
        ipv4_address: 172.16.238.3

  sonr-vault:
    container_name: localnet-sonr-vault
    build:
      context: $SONR_VAULT_CODE_DIR
      dockerfile: docker/Dockerfile.localnet
    volumes:
      - ipfs_path:/home/sonr-vault-user/.ipfs
    environment:
      - PORT=8888
      - IPFS_API_ADDR=172.16.238.2:5001
        #- IPFS_PATH="~/.ipfs"
      - SONR_RPC_ADDR_PUBLIC=172.16.238.3:9090
    command: "--skip-chain-validation"
    ports:
      - 127.0.0.1:8888:8888
    networks:
      sonrnet:
        ipv4_address: 172.16.238.4
    depends_on:
      - sonr0

  sonr1:
    container_name: localnet-sonr-node1
    build:
      context: $SONR_CODE_DIR
      dockerfile: docker/Dockerfile.localnet
    environment:
      - IPFS_ADDRESS=localnet-ipfs:4001
      - IPFS_API_ADDRESS=localnet-ipfs:5001
      - PRIMARY_NODE_ADDR=localnet-sonr-node0
    entrypoint:
      - /bin/bash
      - -c
      - | 
        echo 'Waiting for primary node to come up.'
        until [ \
        "$$(curl -s -w '%{http_code}' -o /dev/null "http://$${PRIMARY_NODE_ADDR}:1317/node_info")" \
        -eq 200 ]
        do
          echo '.'
          sleep 2
        done
        echo 'Primary node is up.'
        export PRIMARY_NODE_ID=$$(curl --retry 3 --retry-delay 5 -X GET "http://$${PRIMARY_NODE_ADDR}:1317/node_info" -H "accept: application/json" \
        | dasel -p json ".node_info.id" | tr -d '"')
        curl "http://$${PRIMARY_NODE_ADDR}:26657/genesis" | dasel -p json .result.genesis > ~/.sonr/config/genesis.json
        dasel put string -f ~/.sonr/config/config.toml p2p.persistent_peers "$${PRIMARY_NODE_ID}@$${PRIMARY_NODE_ADDR}:26656"
        sonrd start
    ports:
      - 1318:1317
      - 2346:2345
      - 26666-26667:26656-26657
      - 9092:9090
      - 9093:9091
      - 4501:4500
    networks:
      sonrnet:
        ipv4_address: 172.16.238.5
    depends_on:
      - sonr0

volumes:
  ipfs_path:
  ipfs_fuse:
  ipns_fuse:
  sonr_genesis:

networks:
  sonrnet:
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

